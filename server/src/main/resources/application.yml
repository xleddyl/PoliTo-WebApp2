spring:
  application:
    name: "ticketing_app"
  datasource:
    url: jdbc:postgresql://host.docker.internal:5432/postgres
    username: postgres
    password: mysecretpassword
  jpa:
    show-sql: true
    hibernate:
      ddl-auto: create
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: http://host.docker.internal:8080/realms/ticketing_app
      client:
        registration:
          keycloak:
            client-id: ticket-app-client
            authorization-grant-type: authorization_code
            scope: openid
            client-secret: oT3nPViRBUuOez1GoJfFpfn7nQMgbDbh
        provider:
          keycloak:
            issuer-uri: http://host.docker.internal:8080/realms/ticketing_app
            user-name-attribute: preferred_username

keycloak:
  realm: ticketing_app
  clientId: ticket-app-client
  authUrl: http://host.docker.internal:8080
  secret: oT3nPViRBUuOez1GoJfFpfn7nQMgbDbh

management:
  tracing:
    sampling:
      probability: 1.0
  zipkin:
    tracing:
      endpoint: http://host.docker.internal:9411/api/v2/spans

  endpoints:
    web:
      exposure:
        include: prometheus
  metrics:
    distribution:
      percentiles-histogram:
        http:
          server:
            requests: true

logging:
  pattern:
    level: "%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]"

server:
  port: 8081